# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T15:52:36+00:00

from __future__ import annotations

from typing import List, Optional

from pydantic import BaseModel, Field, RootModel, conint


class Cursor(RootModel[str]):
    root: str = Field(..., description='A scroll handle')


class Error(BaseModel):
    code: Optional[int] = None
    message: Optional[str] = None


class FieldModel(RootModel[str]):
    root: str = Field(..., description='The name of a field')


class Hit(BaseModel):
    pass


class OrganicResult(BaseModel):
    count: Optional[conint(ge=0, le=10000)] = Field(
        None, description='Number of results returned'
    )
    items: Optional[List[Hit]] = None
    total: Optional[conint(ge=0)] = Field(
        None, description='Approximate number of results meeting query'
    )


class ScrapeResult(BaseModel):
    count: Optional[conint(ge=0, le=10000)] = Field(
        None, description='Number of results returned'
    )
    cursor: Optional[Cursor] = None
    items: Optional[List[Hit]] = None
    previous: Optional[Cursor] = None
    total: Optional[conint(ge=0)] = Field(
        None, description='Total number of results from this cursor point'
    )


class SearchV1FieldsGetResponse(RootModel[List[FieldModel]]):
    root: List[FieldModel]
